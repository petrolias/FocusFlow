@page "/projects"

<h3>Projects</h3>

<button @onclick="CreateProject">Create New Project</button>

<table>
    <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var project in projects)
        {
            <tr>
                <td>@project.Name</td>
                <td>@project.Description</td>
                <td>
                    <button @onclick="() => EditProject(project)">Edit</button>
                    <button @onclick="() => DeleteProject(project.Id)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<Project> projects = new List<Project>();

    [Inject]
    private IProjectService ProjectService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        projects = await ProjectService.GetProjectsAsync();
    }

    private async Task CreateProject()
    {
        // Logic to create a new project
        var newProject = new Project { Name = "New Project", Description = "Description" };
        await ProjectService.CreateProjectAsync(newProject);
        projects = await ProjectService.GetProjectsAsync();
    }

    private async Task EditProject(Project project)
    {
        // Logic to edit a project
        project.Name += " (Edited)";
        await ProjectService.UpdateProjectAsync(project);
        projects = await ProjectService.GetProjectsAsync();
    }

    private async Task DeleteProject(int projectId)
    {
        // Logic to delete a project
        await ProjectService.DeleteProjectAsync(projectId);
        projects = await ProjectService.GetProjectsAsync();
    }

    public class Project
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
    }
}